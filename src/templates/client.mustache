
@Injectable()
export class ApiClient {
  private baseUrl: string;
  constructor(
    private httpClient: HttpClient,
    @Inject(BASE_URL) public baseUrl: string
  ) {  
    this.baseUrl = "{{apiConfig.baseUrl}}";
  }
  
  public request<T = any>(
    path: string,
    method: 'DELETE' | 'GET' | 'POST' | 'PUT',
    body?: any
  ): Observable<T> {
    const headers = new HttpHeaders({
      "Content-Type": "application/json"
    });
    const request = new HttpRequest<T>(method, `${this.baseUrl}${path}`, body, { withCredentials: true, headers: headers});
    return this.httpClient.request<T>(request).pipe(map(result => <T>(result as any)));
  }

{{#routes}}

  {{#outOfModule}}

  /**
  {{#comments}}
   * {{.}}
  {{/comments}}
   */
  {{name}} = ({{#routeArgs}}{{name}}{{#optional}}?{{/optional}}: {{type}}, {{/routeArgs}}) =>
    this.request<{{returnType}}>(`{{path}}`, "{{method}}"{{#bodyArg}},{{.}}{{/bodyArg}}),
  {{/outOfModule}}

  {{#combined}}
  {{moduleName}} = {
    {{#routes}}


    /**
    {{#comments}}
     * {{.}}
    {{/comments}}
     */
    {{name}}: ({{#routeArgs}}{{name}}{{#optional}}?{{/optional}}: {{type}}, {{/routeArgs}}) =>
      this.request<{{returnType}}>(`{{path}}`, "{{method}}"{{#bodyArg}}, {{.}}{{/bodyArg}}),
    {{/routes}}
  }
  {{/combined}}
{{/routes}}

}
